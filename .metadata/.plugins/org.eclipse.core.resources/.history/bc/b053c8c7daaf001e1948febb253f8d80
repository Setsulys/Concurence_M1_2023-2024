package fr.uge.exam.exo3;

import java.lang.invoke.MethodHandles;
import java.lang.invoke.VarHandle;

public class MaxRecorderOne {

	private volatile int max =-1;
	private static final VarHandle MAX_HANDLE;
	
	static {
		var lookup = MethodHandles.lookup();
		try {
			MAX_HANDLE = lookup.findVarHandle(MaxRecorderOne.class, "max", int.class);
		}catch(NoSuchFieldException | IllegalAccessException e) {
			throw new AssertionError(e);
		}
	}
	
	public boolean process(int value) {
		int currentMax = max;
        while (value > currentMax) {
            if (MAX_HANDLE.compareAndSet(this, currentMax, value)) {
                System.out.println("Nouvelle valeur maximale : " + value);
                return true;
            } else {
                currentMax = max;
            }
        }
        return false;

	}
}
